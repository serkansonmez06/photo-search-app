{"ast":null,"code":"import * as actionTypes from \"../actions/actionTypes\"; //we control states in here. it will check action\n\nlet initialState = {\n  name: \"\",\n  lastName: \"\",\n  messages: []\n};\n\nconst developerNameReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.DEVELOPER_NAME:\n      return { ...state,\n        name: \"Serkan\",\n        lastName: \"Sonmez\"\n      };\n\n    case actionTypes.ADD_CONTACT_MESSAGE:\n      console.log(\"change the messageReeducer\");\n      return { ...state,\n        messages: [...state.messages, action.payload]\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default developerNameReducer; // import initialState from './initalState'\n// export default function getImageReducer(state = initialState.images, action) {\n//     switch (action.type) {\n//         case actionTypes.GET_IMAGE:\n//             return action.payload\n//         default:\n//             return state;\n//     }\n// }","map":{"version":3,"sources":["/Users/serkansonmez/Desktop/mod-2-react-redux-project/search-engine-web/src/redux/reducers/developerNameReducer.js.js"],"names":["actionTypes","initialState","name","lastName","messages","developerNameReducer","state","action","type","DEVELOPER_NAME","ADD_CONTACT_MESSAGE","console","log","payload"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B,C,CAEA;;AACA,IAAIC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,EADW;AAEjBC,EAAAA,QAAQ,EAAE,EAFO;AAGjBC,EAAAA,QAAQ,EAAE;AAHO,CAAnB;;AAMA,MAAMC,oBAAoB,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AAC7D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,WAAW,CAACS,cAAjB;AACE,aAAO,EACL,GAAGH,KADE;AAELJ,QAAAA,IAAI,EAAE,QAFD;AAGLC,QAAAA,QAAQ,EAAE;AAHL,OAAP;;AAKF,SAAKH,WAAW,CAACU,mBAAjB;AACEC,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACA,aAAO,EACL,GAAGN,KADE;AAELF,QAAAA,QAAQ,EAAE,CAAC,GAAGE,KAAK,CAACF,QAAV,EAAoBG,MAAM,CAACM,OAA3B;AAFL,OAAP;;AAKF;AACE,aAAOP,KAAP;AAfJ;AAiBD,CAlBD;;AAoBA,eAAeD,oBAAf,C,CACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import * as actionTypes from \"../actions/actionTypes\";\n\n//we control states in here. it will check action\nlet initialState = {\n  name: \"\",\n  lastName: \"\",\n  messages: [],\n};\n\nconst developerNameReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.DEVELOPER_NAME:\n      return {\n        ...state,\n        name: \"Serkan\",\n        lastName: \"Sonmez\",\n      };\n    case actionTypes.ADD_CONTACT_MESSAGE:\n      console.log(\"change the messageReeducer\");\n      return {\n        ...state,\n        messages: [...state.messages, action.payload],\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default developerNameReducer;\n// import initialState from './initalState'\n\n// export default function getImageReducer(state = initialState.images, action) {\n//     switch (action.type) {\n//         case actionTypes.GET_IMAGE:\n//             return action.payload\n//         default:\n//             return state;\n//     }\n// }\n"]},"metadata":{},"sourceType":"module"}