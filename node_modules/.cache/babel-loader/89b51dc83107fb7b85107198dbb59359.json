{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/serkansonmez/Desktop/mod-2-react-redux-project/search-engine-web/src/component/SearchComponent.js\";\nimport React, { Component } from \"react\";\nimport alertifyjs from \"alertifyjs\"; // alertifyjs is framework\n\nimport { FormGroup } from \"reactstrap\"; //import reactstrap for styling\n\nimport \"../App.css\";\n\nclass SearchComponent extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      baseUrl: \"https://api.unsplash.com/search/photos/?per_page=5&client_id=\",\n      accessKey: \"age-dmYcxYinzenv4oHzL4f9_NJWqU3otOzhdlhAQYA\",\n      query: \"&query=\",\n      inputValue: \"\",\n      searchUrl: \"\",\n      images: []\n    };\n\n    this.handleChange = event => {\n      // console.log(\"handlechange running\");\n      this.setState({\n        inputValue: event.target.value\n      }); // collect user input\n\n      const tempSearchURL = this.state.baseUrl + this.state.accessKey + this.state.query + event.target.value;\n      this.setState({\n        searchUrl: tempSearchURL\n      }); //update search url with user input\n    };\n\n    this.handleSubmit = event => {\n      //console.log(this.state.inputValue);\n      // it prevents a browser reload/refresh.\n      this.getImages();\n      event.preventDefault();\n    };\n\n    this.handleReset = () => {\n      this.setState({\n        //resets state property.\n        inputValue: \"\",\n        searchUrl: \"\",\n        images: []\n      });\n      alertifyjs.success(\"Reseting\", 1.5); // framwork to create notification\n      //each click invokes alertify method\n      // console.log(\"reset\");\n    };\n\n    this.getImages = () => {\n      //console.log(\"getimages is running\");\n      fetch(this.state.searchUrl) // fetch data from updated state\n      .then(response => response.json()) // response is json type data\n      .then(data => {\n        //console.log(data.results[0].urls.small)\n        const imgs = this.state.images.concat(data.results); // concat data.results to images array.\n        // console.log(imgs);\n\n        this.setState({\n          images: imgs\n        }); // update state images array\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchComp\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        class: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              class: \"form-control\",\n              placeholder: \"Search for any image\",\n              value: this.state.inputValue,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group-append\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-warning\",\n                type: \"submit\",\n                children: \"Search\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.handleReset,\n          class: \"btn btn-success\",\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        id: \"searchImgDisplay\",\n        children: this.state.images.map((item, i) => /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: item.urls.small,\n            alt: \"displayImage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default SearchComponent;","map":{"version":3,"sources":["/Users/serkansonmez/Desktop/mod-2-react-redux-project/search-engine-web/src/component/SearchComponent.js"],"names":["React","Component","alertifyjs","FormGroup","SearchComponent","state","baseUrl","accessKey","query","inputValue","searchUrl","images","handleChange","event","setState","target","value","tempSearchURL","handleSubmit","getImages","preventDefault","handleReset","success","fetch","then","response","json","data","imgs","concat","results","render","map","item","i","urls","small"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,YAAvB,C,CAAqC;;AACrC,SAASC,SAAT,QAA0B,YAA1B,C,CAAwC;;AACxC,OAAO,YAAP;;AACA,MAAMC,eAAN,SAA8BH,SAA9B,CAAwC;AAAA;AAAA;AAAA,SACtCI,KADsC,GAC9B;AACNC,MAAAA,OAAO,EAAE,+DADH;AAENC,MAAAA,SAAS,EAAE,6CAFL;AAGNC,MAAAA,KAAK,EAAE,SAHD;AAINC,MAAAA,UAAU,EAAE,EAJN;AAKNC,MAAAA,SAAS,EAAE,EALL;AAMNC,MAAAA,MAAM,EAAE;AANF,KAD8B;;AAAA,SAUtCC,YAVsC,GAUtBC,KAAD,IAAW;AACxB;AACA,WAAKC,QAAL,CAAc;AAAEL,QAAAA,UAAU,EAAEI,KAAK,CAACE,MAAN,CAAaC;AAA3B,OAAd,EAFwB,CAGxB;;AACA,YAAMC,aAAa,GACjB,KAAKZ,KAAL,CAAWC,OAAX,GACA,KAAKD,KAAL,CAAWE,SADX,GAEA,KAAKF,KAAL,CAAWG,KAFX,GAGAK,KAAK,CAACE,MAAN,CAAaC,KAJf;AAMA,WAAKF,QAAL,CAAc;AAAEJ,QAAAA,SAAS,EAAEO;AAAb,OAAd,EAVwB,CAWxB;AACD,KAtBqC;;AAAA,SAwBtCC,YAxBsC,GAwBtBL,KAAD,IAAW;AACxB;AACA;AACA,WAAKM,SAAL;AACAN,MAAAA,KAAK,CAACO,cAAN;AACD,KA7BqC;;AAAA,SA+BtCC,WA/BsC,GA+BxB,MAAM;AAClB,WAAKP,QAAL,CAAc;AACZ;AACAL,QAAAA,UAAU,EAAE,EAFA;AAGZC,QAAAA,SAAS,EAAE,EAHC;AAIZC,QAAAA,MAAM,EAAE;AAJI,OAAd;AAMAT,MAAAA,UAAU,CAACoB,OAAX,CAAmB,UAAnB,EAA+B,GAA/B,EAPkB,CAOmB;AACrC;AACA;AACD,KAzCqC;;AAAA,SA2CtCH,SA3CsC,GA2C1B,MAAM;AAChB;AACAI,MAAAA,KAAK,CAAC,KAAKlB,KAAL,CAAWK,SAAZ,CAAL,CAA4B;AAA5B,OACGc,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EACuC;AADvC,OAEGF,IAFH,CAESG,IAAD,IAAU;AACd;AACA,cAAMC,IAAI,GAAG,KAAKvB,KAAL,CAAWM,MAAX,CAAkBkB,MAAlB,CAAyBF,IAAI,CAACG,OAA9B,CAAb,CAFc,CAEuC;AACrD;;AACA,aAAKhB,QAAL,CAAc;AAAEH,UAAAA,MAAM,EAAEiB;AAAV,SAAd,EAJc,CAImB;AAClC,OAPH;AAQD,KArDqC;AAAA;;AAuDtCG,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACE;AAAM,QAAA,QAAQ,EAAE,KAAKb,YAArB;AAAmC,QAAA,KAAK,EAAC,YAAzC;AAAA,gCACE,QAAC,SAAD;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,kBAAf;AAAA,oCACE;AACE,cAAA,IAAI,EAAC,MADP;AAEE,cAAA,KAAK,EAAC,cAFR;AAGE,cAAA,WAAW,EAAC,sBAHd;AAIE,cAAA,KAAK,EAAE,KAAKb,KAAL,CAAWI,UAJpB;AAKE,cAAA,QAAQ,EAAE,KAAKG;AALjB;AAAA;AAAA;AAAA;AAAA,oBADF,eAQE;AAAK,cAAA,SAAS,EAAC,oBAAf;AAAA,qCACE;AAAQ,gBAAA,SAAS,EAAC,iBAAlB;AAAoC,gBAAA,IAAI,EAAC,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAkBE;AAAQ,UAAA,OAAO,EAAE,KAAKS,WAAtB;AAAmC,UAAA,KAAK,EAAC,iBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAuBE;AAAI,QAAA,EAAE,EAAC,kBAAP;AAAA,kBACG,KAAKhB,KAAL,CAAWM,MAAX,CAAkBqB,GAAlB,CAAsB,CAACC,IAAD,EAAOC,CAAP,kBACrB;AAAA,iCACE;AAAK,YAAA,GAAG,EAAED,IAAI,CAACE,IAAL,CAAUC,KAApB;AAA2B,YAAA,GAAG,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA;AADF,WAASF,CAAT;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAiCD;;AAzFqC;;AA4FxC,eAAe9B,eAAf","sourcesContent":["import React, { Component } from \"react\";\nimport alertifyjs from \"alertifyjs\"; // alertifyjs is framework\nimport { FormGroup } from \"reactstrap\"; //import reactstrap for styling\nimport \"../App.css\";\nclass SearchComponent extends Component {\n  state = {\n    baseUrl: \"https://api.unsplash.com/search/photos/?per_page=5&client_id=\",\n    accessKey: \"age-dmYcxYinzenv4oHzL4f9_NJWqU3otOzhdlhAQYA\",\n    query: \"&query=\",\n    inputValue: \"\",\n    searchUrl: \"\",\n    images: [],\n  };\n\n  handleChange = (event) => {\n    // console.log(\"handlechange running\");\n    this.setState({ inputValue: event.target.value });\n    // collect user input\n    const tempSearchURL =\n      this.state.baseUrl +\n      this.state.accessKey +\n      this.state.query +\n      event.target.value;\n\n    this.setState({ searchUrl: tempSearchURL });\n    //update search url with user input\n  };\n\n  handleSubmit = (event) => {\n    //console.log(this.state.inputValue);\n    // it prevents a browser reload/refresh.\n    this.getImages();\n    event.preventDefault();\n  };\n\n  handleReset = () => {\n    this.setState({\n      //resets state property.\n      inputValue: \"\",\n      searchUrl: \"\",\n      images: [],\n    });\n    alertifyjs.success(\"Reseting\", 1.5); // framwork to create notification\n    //each click invokes alertify method\n    // console.log(\"reset\");\n  };\n\n  getImages = () => {\n    //console.log(\"getimages is running\");\n    fetch(this.state.searchUrl) // fetch data from updated state\n      .then((response) => response.json()) // response is json type data\n      .then((data) => {\n        //console.log(data.results[0].urls.small)\n        const imgs = this.state.images.concat(data.results); // concat data.results to images array.\n        // console.log(imgs);\n        this.setState({ images: imgs }); // update state images array\n      });\n  };\n\n  render() {\n    return (\n      <div className=\"searchComp\">\n        <form onSubmit={this.handleSubmit} class=\"form-group\">\n          <FormGroup>\n            <div className=\"input-group mb-3\">\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                placeholder=\"Search for any image\"\n                value={this.state.inputValue}\n                onChange={this.handleChange}\n              />\n              <div className=\"input-group-append\">\n                <button className=\"btn btn-warning\" type=\"submit\">\n                  Search\n                </button>\n              </div>\n            </div>\n          </FormGroup>\n\n          <button onClick={this.handleReset} class=\"btn btn-success\">\n            Reset\n          </button>\n        </form>\n        <ul id=\"searchImgDisplay\">\n          {this.state.images.map((item, i) => (\n            <h1 key={i}>\n              <img src={item.urls.small} alt=\"displayImage\"></img>\n            </h1>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default SearchComponent;\n"]},"metadata":{},"sourceType":"module"}