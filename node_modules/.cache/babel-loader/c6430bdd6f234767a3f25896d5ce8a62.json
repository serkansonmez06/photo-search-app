{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/serkansonmez/Desktop/mod-2-react-redux-project/search-engine-web/src/component/SearchComponent.js\";\nimport React, { Component } from \"react\";\nimport alertifyjs from \"alertifyjs\"; // alertifyjs is framework\n\nimport { FormGroup } from \"reactstrap\"; //import reactstrap for styling\n\nimport \"../App.css\";\n\nclass SearchComponent extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      baseUrl: \"https://api.unsplash.com/search/photos/?per_page=5&client_id=\",\n      accessKey: \"age-dmYcxYinzenv4oHzL4f9_NJWqU3otOzhdlhAQYA\",\n      query: \"&query=\",\n      inputValue: \"\",\n      searchUrl: \"\",\n      images: []\n    };\n\n    this.handleChange = event => {\n      // console.log(\"handlechange running\");\n      this.setState({\n        inputValue: event.target.value\n      }); // collect user input\n\n      const tempSearchURL = this.state.baseUrl + this.state.accessKey + this.state.query + event.target.value;\n      this.setState({\n        searchUrl: tempSearchURL\n      }); //update search url with user input\n    };\n\n    this.handleSubmit = event => {\n      //console.log(this.state.inputValue);\n      // it prevents a browser reload/refresh.\n      this.getImages();\n      event.preventDefault();\n    };\n\n    this.handleReset = () => {\n      this.setState({\n        //resets state property.\n        inputValue: \"\",\n        searchUrl: \"\",\n        images: []\n      });\n      alertifyjs.success(\"Reseting\", 1.5); // framework to create notification\n      //each click invokes alertify method\n      // console.log(\"reset\");\n    };\n\n    this.getImages = () => {\n      //console.log(\"getimages is running\");\n      fetch(this.state.searchUrl) // fetch data from updated state\n      .then(response => response.json()) // response is json type data\n      .then(data => {\n        //console.log(data.results[0].urls.small)\n        const imgs = this.state.images.concat(data.results); // concat data.results to images array.\n        // console.log(imgs);\n\n        this.setState({\n          images: imgs\n        }); // update state images array\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchComp\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        class: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              class: \"form-control\",\n              placeholder: \"Search for any image\",\n              value: this.state.inputValue,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 13\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group-append\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-warning\",\n                type: \"submit\",\n                children: \"Search \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 13\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 16\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.handleReset,\n          class: \"btn btn-success\",\n          children: \"Reset \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"ul\", {\n        id: \"searchImgDisplay\",\n        children: [\" \", this.state.images.map((item, i) => /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: item.urls.small,\n            alt: \"displayImage\",\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 21\n          }, this), \" \"]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 54\n        }, this)), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 20\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 18\n    }, this);\n  }\n\n}\n\nexport default SearchComponent;","map":{"version":3,"sources":["/Users/serkansonmez/Desktop/mod-2-react-redux-project/search-engine-web/src/component/SearchComponent.js"],"names":["React","Component","alertifyjs","FormGroup","SearchComponent","state","baseUrl","accessKey","query","inputValue","searchUrl","images","handleChange","event","setState","target","value","tempSearchURL","handleSubmit","getImages","preventDefault","handleReset","success","fetch","then","response","json","data","imgs","concat","results","render","map","item","i","urls","small"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport alertifyjs from \"alertifyjs\"; // alertifyjs is framework\nimport { FormGroup } from \"reactstrap\"; //import reactstrap for styling\nimport \"../App.css\";\nclass SearchComponent extends Component {\n    state = {\n        baseUrl: \"https://api.unsplash.com/search/photos/?per_page=5&client_id=\",\n        accessKey: \"age-dmYcxYinzenv4oHzL4f9_NJWqU3otOzhdlhAQYA\",\n        query: \"&query=\",\n        inputValue: \"\",\n        searchUrl: \"\",\n        images: [],\n    };\n\n    handleChange = (event) => {\n        // console.log(\"handlechange running\");\n        this.setState({ inputValue: event.target.value });\n        // collect user input\n        const tempSearchURL =\n            this.state.baseUrl +\n            this.state.accessKey +\n            this.state.query +\n            event.target.value;\n\n        this.setState({ searchUrl: tempSearchURL });\n        //update search url with user input\n    };\n\n    handleSubmit = (event) => {\n        //console.log(this.state.inputValue);\n        // it prevents a browser reload/refresh.\n        this.getImages();\n        event.preventDefault();\n    };\n\n    handleReset = () => {\n        this.setState({\n            //resets state property.\n            inputValue: \"\",\n            searchUrl: \"\",\n            images: [],\n        });\n        alertifyjs.success(\"Reseting\", 1.5); // framework to create notification\n        //each click invokes alertify method\n        // console.log(\"reset\");\n    };\n\n    getImages = () => {\n        //console.log(\"getimages is running\");\n        fetch(this.state.searchUrl) // fetch data from updated state\n            .then((response) => response.json()) // response is json type data\n            .then((data) => {\n                //console.log(data.results[0].urls.small)\n                const imgs = this.state.images.concat(data.results); // concat data.results to images array.\n                // console.log(imgs);\n                this.setState({ images: imgs }); // update state images array\n            });\n    };\n\n    render() {\n        return ( <\n            div className = \"searchComp\" >\n            <\n            form onSubmit = { this.handleSubmit }\n            class = \"form-group\" >\n            <\n            FormGroup >\n            <\n            div className = \"input-group mb-3\" >\n            <\n            input type = \"text\"\n            class = \"form-control\"\n            placeholder = \"Search for any image\"\n            value = { this.state.inputValue }\n            onChange = { this.handleChange }\n            /> <\n            div className = \"input-group-append\" >\n            <\n            button className = \"btn btn-warning\"\n            type = \"submit\" >\n            Search <\n            /button> <\n            /div> <\n            /div> <\n            /FormGroup>\n\n            <\n            button onClick = { this.handleReset }\n            class = \"btn btn-success\" >\n            Reset <\n            /button> <\n            /form> <\n            ul id = \"searchImgDisplay\" > {\n                this.state.images.map((item, i) => ( <\n                    h1 key = { i } >\n                    <\n                    img src = { item.urls.small }\n                    alt = \"displayImage\" > < /img> <\n                    /h1>\n                ))\n            } <\n            /ul> <\n            /div>\n        );\n    }\n}\n\nexport default SearchComponent;"]},"metadata":{},"sourceType":"module"}